# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
generic_hw_control_loop:
  loop_hz: 500
  cycle_time_error_threshold: 0.1

# Settings for ros_control hardware interface
hardware_interface:
   joints:
      - joint1
      - joint2
      - joint3
      - joint4
      - joint5
      - joint6

# Publish all joint states ----------------------------------
# Creates the /joint_states topic necessary in ROS
joint_state_controller:
   type:         joint_state_controller/JointStateController
   publish_rate: 20

# Joint Trajectory Controller -------------------------------
# For detailed explanations of parameter see http://wiki.ros.org/joint_trajectory_controller
position_trajectory_controller:
   type: position_controllers/JointTrajectoryController
   # These joints can likely just be copied from the hardware_interface list above
   joints:
      - joint1
      - joint2
      - joint3
      - joint4
      - joint5
      - joint6
   constraints:
      goal_time: 5.0
      #stopped_position_tolerance: 0.4 # Defaults to 0.01
      # joint1:
      #     # trajectory: 0.60
      #     # goal:       0.15
      #     trajectory: 0.01
      #     goal:       0.005
      # joint2:
      #     trajectory: 0.01
      #     goal:       0.005
      # joint3:
      #     trajectory: 0.01
      #     goal:       0.005
      # joint4:
      #     trajectory: 0.01
      #     goal:       0.005
      # joint5:
      #     trajectory: 0.01
      #     goal:       0.005
      # joint6:
      #     trajectory: 0.01
      #     goal:       0.005
   # gains:
   #     joint1: {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}
   #     joint2: {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}

   state_publish_rate:  50 # Defaults to 50
   action_monitor_rate: 30 # Defaults to 20
   # state_publish_rate:  50 # Defaults to 50
   # action_monitor_rate: 20 # Defaults to 20
   # hold_trajectory_duration: 0 # Defaults to 0.5

# Individual Position Controllers ---------------------------------------
# Allows to send individual ROS msg of Float64 to each joint separately
joint1_position_controller:
   type: position_controllers/JointPositionController
   joint: joint1
   pid: {p: 100.0, i: 0.01, d: 10.0}
joint2_position_controller:
   type: position_controllers/JointPositionController
   joint: joint2
   pid: {p: 100.0, i: 0.01, d: 10.0}
joint3_position_controller:
   type: position_controllers/JointPositionController
   joint: joint3
   pid: {p: 100.0, i: 0.01, d: 10.0}
joint4_position_controller:
   type: position_controllers/JointPositionController
   joint: joint4
   pid: {p: 100.0, i: 0.01, d: 10.0}
joint5_position_controller:
   type: position_controllers/JointPositionController
   joint: joint5
   pid: {p: 100.0, i: 0.01, d: 10.0}
joint6_position_controller:
   type: position_controllers/JointPositionController
   joint: joint6
   pid: {p: 100.0, i: 0.01, d: 10.0}

# Group Position Controllers ---------------------------------------
# Allows to send single ROS msg of Float64MultiArray to all joints
joint_position_controller:
   type: position_controllers/JointGroupPositionController
   joints:
     - joint1
     - joint2
     - joint3
     - joint4
     - joint5
     - joint6
